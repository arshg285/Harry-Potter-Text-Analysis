rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(rgl.printRglwidget = TRUE)
rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(rgl.printRglwidget = TRUE)
library(harrypotter)
library(readtext)
library(quanteda)
library(R.utils)
library(cmu.textstat)
library(quanteda.textstats)
library(dplyr)
library(tidyr)
library(SentimentAnalysis)
library(stopwords)
library(knitr)
library(ggraph)
library(igraph)
stop_words <- c(stopwords(source = "smart"),
stopwords(source = "snowball"),
stopwords(source = "stopwords-iso"))
sorcerers_stone_tokens <- "harry_potter_corpus/sorcerers_stone.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
chamber_of_secrets_tokens <- "harry_potter_corpus/chamber_of_secrets.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
prisoners_of_azkaban_tokens <- "harry_potter_corpus/prisoner_of_azkaban.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
goblet_of_fire_tokens <- "harry_potter_corpus/goblet_of_fire.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
order_of_phoenix_tokens <- "harry_potter_corpus/order_of_phoenix.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
half_blood_price_tokens <- "harry_potter_corpus/half_blood_price.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
deathly_hallows_tokens <- "harry_potter_corpus/deathly_hallows.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
sorcerers_stone_dfm <- dfm(sorcerers_stone_tokens)
chamber_of_secrets_dfm <- dfm(chamber_of_secrets_tokens)
prisoners_of_azkaban_dfm <- dfm(prisoners_of_azkaban_tokens)
goblet_of_fire_dfm <- dfm(goblet_of_fire_tokens)
order_of_phoenix_dfm <- dfm(order_of_phoenix_tokens)
half_blood_price_dfm <- dfm(half_blood_price_tokens)
deathly_hallows_dfm <- dfm(deathly_hallows_tokens)
sorcerers_stone_MI <- collocates_by_MI(sorcerers_stone_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
add_row(token = "ginny", MI_1 = NA) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Sorcerer's Stone")
chamber_of_secrets_MI <- collocates_by_MI(chamber_of_secrets_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Chamber of Secrets")
prisoners_of_azkaban_MI <- collocates_by_MI(prisoners_of_azkaban_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Prisoner of Azkaban")
goblet_of_fire_MI <- collocates_by_MI(goblet_of_fire_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Goblet of Fire")
order_of_phoenix_MI <- collocates_by_MI(order_of_phoenix_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Order of Phoenix")
half_blood_price_MI <- collocates_by_MI(half_blood_price_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Half Blood Prince")
deathly_hallows_MI <- collocates_by_MI(deathly_hallows_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Deathly Hallows")
harry_potter_MI <- rbind(sorcerers_stone_MI,
chamber_of_secrets_MI,
prisoners_of_azkaban_MI,
goblet_of_fire_MI,
order_of_phoenix_MI,
half_blood_price_MI,
deathly_hallows_MI)
books <- c("Sorcerer's Stone",
"Chamber of Secrets",
"Prisoner of Azkaban",
"Goblet of Fire",
"Order of Phoenix",
"Half Blood Prince",
"Deathly Hallows")
harry_potter_MI$Character <- capitalize(harry_potter_MI$Character)
harry_relationship <- harry_potter_MI %>%
ggplot(aes(x = factor(Book, level = books), y = Score, color = Character)) +
geom_point(pch = 20) +
geom_smooth(method = "gam", se = F) +
geom_line(aes(group = Character)) +
ylab("Relationship Score with Harry Potter") +
xlab("") +
ggtitle("Strength of relationships of different characters with Harry Potter across all seven books") +
theme(plot.title = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))
harry_relationship
reticulate::repl_python()
reticulate::repl_python()
import numpy as np
y
harry_relationship
reticulate::repl_python()
rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(rgl.printRglwidget = TRUE)
harry_relationship <- harry_potter_MI %>%
ggplot(aes(x = factor(Book, level = books), y = Score, color = Character)) +
geom_point(pch = 20) +
geom_smooth(method = "gam", se = F) +
geom_line(aes(group = Character)) +
ylab("Relationship Score with Harry Potter") +
xlab("") +
ggtitle("Strength of relationships of different characters with Harry Potter across all seven books") +
theme(plot.title = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))
library(harrypotter)
library(readtext)
library(quanteda)
library(R.utils)
library(cmu.textstat)
library(quanteda.textstats)
library(dplyr)
library(tidyr)
library(SentimentAnalysis)
library(stopwords)
library(knitr)
library(ggraph)
library(igraph)
rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(rgl.printRglwidget = TRUE)
library(harrypotter)
library(readtext)
library(quanteda)
library(R.utils)
library(cmu.textstat)
library(quanteda.textstats)
library(dplyr)
library(tidyr)
library(SentimentAnalysis)
library(stopwords)
library(knitr)
library(ggraph)
library(igraph)
stop_words <- c(stopwords(source = "smart"),
stopwords(source = "snowball"),
stopwords(source = "stopwords-iso"))
sorcerers_stone_tokens <- "harry_potter_corpus/sorcerers_stone.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
chamber_of_secrets_tokens <- "harry_potter_corpus/chamber_of_secrets.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
prisoners_of_azkaban_tokens <- "harry_potter_corpus/prisoner_of_azkaban.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
goblet_of_fire_tokens <- "harry_potter_corpus/goblet_of_fire.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
order_of_phoenix_tokens <- "harry_potter_corpus/order_of_phoenix.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
half_blood_price_tokens <- "harry_potter_corpus/half_blood_price.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
deathly_hallows_tokens <- "harry_potter_corpus/deathly_hallows.txt" %>%
readtext() %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE,
what = "word") %>%
tokens_tolower() %>%
tokens_compound(pattern = phrase(multiword_expressions))
sorcerers_stone_dfm <- dfm(sorcerers_stone_tokens)
chamber_of_secrets_dfm <- dfm(chamber_of_secrets_tokens)
prisoners_of_azkaban_dfm <- dfm(prisoners_of_azkaban_tokens)
goblet_of_fire_dfm <- dfm(goblet_of_fire_tokens)
order_of_phoenix_dfm <- dfm(order_of_phoenix_tokens)
half_blood_price_dfm <- dfm(half_blood_price_tokens)
deathly_hallows_dfm <- dfm(deathly_hallows_tokens)
sorcerers_stone_MI <- collocates_by_MI(sorcerers_stone_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
add_row(token = "ginny", MI_1 = NA) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Sorcerer's Stone")
chamber_of_secrets_MI <- collocates_by_MI(chamber_of_secrets_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Chamber of Secrets")
prisoners_of_azkaban_MI <- collocates_by_MI(prisoners_of_azkaban_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Prisoner of Azkaban")
goblet_of_fire_MI <- collocates_by_MI(goblet_of_fire_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Goblet of Fire")
order_of_phoenix_MI <- collocates_by_MI(order_of_phoenix_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Order of Phoenix")
half_blood_price_MI <- collocates_by_MI(half_blood_price_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Half Blood Prince")
deathly_hallows_MI <- collocates_by_MI(deathly_hallows_tokens, "harry") %>%
filter(token %in% c("ron", "hermione", "dumbledore", "snape", "malfoy", "ginny")) %>%
dplyr::select(token, MI_1) %>%
rename(Character = token, Score = MI_1) %>%
mutate(Book = "Deathly Hallows")
harry_potter_MI <- rbind(sorcerers_stone_MI,
chamber_of_secrets_MI,
prisoners_of_azkaban_MI,
goblet_of_fire_MI,
order_of_phoenix_MI,
half_blood_price_MI,
deathly_hallows_MI)
books <- c("Sorcerer's Stone",
"Chamber of Secrets",
"Prisoner of Azkaban",
"Goblet of Fire",
"Order of Phoenix",
"Half Blood Prince",
"Deathly Hallows")
harry_potter_MI$Character <- capitalize(harry_potter_MI$Character)
harry_relationship <- harry_potter_MI %>%
ggplot(aes(x = factor(Book, level = books), y = Score, color = Character)) +
geom_point(pch = 20) +
geom_smooth(method = "gam", se = F) +
geom_line(aes(group = Character)) +
ylab("Relationship Score with Harry Potter") +
xlab("") +
ggtitle("Strength of relationships of different characters with Harry Potter across all seven books") +
theme(plot.title = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("harry_potter_collocation_graph.png")
harry_relationship
reticulate::repl_python()
sentiments
help("analyzeSentiment")
library(SentimentAnalysis)
analyzeSentiment(deathly_hallows)
plot(analyzeSentiment(deathly_hallows))
plot(analyzeSentiment(deathly_hallows))
analyzeSentiment(deathly_hallows)
analyzeSentiment(deathly_hallows_dfm)
analyzeSentiment(as.data.frame(deathly_hallows_dfm))
analyzeSentiment(as.data.frame(deathly_hallows_dfm))
analyzeSentiment(deathly_hallows_tokens)
analyzeSentiment(deathly_hallows_tokens)
deathly_hallows
analyzeSentiment(deathly_hallows)
help(get_sentiments)
??get_sentiments
get_sentiments("afinn")
library(tidytext)
install.packages("tidytext")
library(tidytext)
get_sentiments("afinn")
install.packages("textdata")
library(textdata)
install.packages("textdata")
get_sentiments("afinn")
get_sentiments("bing")
#> # A tibble: 6,786 × 2
#>    word        sentiment
#>    <chr>       <chr>
#>  1 2-faces     negative
#>  2 abnormal    negative
#>  3 abolish     negative
#>  4 abominable  negative
#>  5 abominably  negative
#>  6 abominate   negative
#>  7 abomination negative
#>  8 abort       negative
#>  9 aborted     negative
#> 10 aborts      negative
#> # … with 6,776 more rows
get_sentiments("nrc")
get_sentiments("bing")
library(harrypotter)
harrypotter::philosophers_stone
dim(harrypotter::philosophers_stone)
typeof(harrypotter::philosophers_stone)
books <- harrypotter %>%
group_by(book)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
nrc_joy
harrypotter::philosophers_stone
harrypotter::philosophers_stone[1]
as.data_frane(harrypotter::philosophers_stone)
as.data_frame(harrypotter::philosophers_stone)
as.data.frame(harrypotter::philosophers_stone)
shape(as.data.frame(harrypotter::philosophers_stone))
dimshape(as.data.frame(harrypotter::philosophers_stone))
dim(as.data.frame(harrypotter::philosophers_stone))
sorcerers_stone_tokens
unlist(sorcerers_stone_tokens)
unlist(sorcerers_stone_tokens)[1]
potter_books()
sentiment <- analyzeSentiment(harrypotter::order_of_the_phoenix)
View(sentiment)
convertToDirection(sentiment)
convertToDirection(sentiment$SentimentQDAP)
typeof(convertToDirection(sentiment$SentimentQDAP))
class(convertToDirection(sentiment$SentimentQDAP))
print(i)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
sentiment <- analyzeSentiment(harrypotter::order_of_the_phoenix)
for {i in range(convertToDirection(sentiment$SentimentQDAP))} {
rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(rgl.printRglwidget = TRUE)
sentiment <- analyzeSentiment(harrypotter::order_of_the_phoenix)
library(harrypotter)
library(readtext)
library(quanteda)
library(R.utils)
library(cmu.textstat)
library(quanteda.textstats)
library(textdata)
library(SentimentAnalysis)
library(dplyr)
library(tidytext)
library(tidyr)
library(SentimentAnalysis)
library(stopwords)
library(knitr)
library(ggraph)
library(igraph)
library(harrypotter)
library(readtext)
library(quanteda)
library(R.utils)
library(cmu.textstat)
library(quanteda.textstats)
library(textdata)
library(SentimentAnalysis)
library(dplyr)
library(tidytext)
library(tidyr)
library(SentimentAnalysis)
library(stopwords)
library(knitr)
library(ggraph)
library(igraph)
sentiment <- analyzeSentiment(harrypotter::order_of_the_phoenix)
sentiment
convertToBinaryResponse(sentiment)
sentiment$SentimentGI
plot(sentiment$SentimentGI)
count(sentiment$SentimentGI)
length(sentiment$SentimentGI)
sentiment <- analyzeSentiment(harrypotter::philosophers_stone)
length(sentiment$SentimentGI)
sentiment_philosophers_stone <- analyzeSentiment(harrypotter::philosophers_stone)
sentiment_philosophers_stone <- analyzeSentiment(harrypotter::philosophers_stone)
sentiment_chamber_of_secrets <- analyzeSentiment(harrypotter::chamber_of_secrets)
sentiment_prisoner_of_azkaban <- analyzeSentiment(harrypotter::prisoner_of_azkaban)
sentiment_goblet_of_fire <- analyzeSentiment(harrypotter::goblet_of_fire)
sentiment_order_of_the_phoenix <- analyzeSentiment(harrypotter::order_of_the_phoenix)
sentiment_half_blood_prince <- analyzeSentiment(harrypotter::half_blood_prince)
sentiment_deathly_hallows <- analyzeSentiment(harrypotter::deathly_hallows)
sentiment_chamber_of_secrets
sentiment_philosophers_stone <- analyzeSentiment(harrypotter::philosophers_stone)$SentimentGI
sentiment_chamber_of_secrets <- analyzeSentiment(harrypotter::chamber_of_secrets)$SentimentGI
sentiment_prisoner_of_azkaban <- analyzeSentiment(harrypotter::prisoner_of_azkaban)$SentimentGI
sentiment_goblet_of_fire <- analyzeSentiment(harrypotter::goblet_of_fire)$SentimentGI
sentiment_order_of_the_phoenix <- analyzeSentiment(harrypotter::order_of_the_phoenix)$SentimentGI
sentiment_half_blood_prince <- analyzeSentiment(harrypotter::half_blood_prince)$SentimentGI
sentiment_deathly_hallows <- analyzeSentiment(harrypotter::deathly_hallows)$SentimentGI
sentiment_chamber_of_secrets
sentiment_chamber_of_secrets_df <- data.frame(sentiment_scores = sentiment_chamber_of_secrets,
book = "Chamber Of Secrets")
sentiment_chamber_of_secrets_df <- data.frame(sentiment_scores = sentiment_chamber_of_secrets,
book = "Chamber Of Secrets")
sentiment_chamber_of_secrets_df
